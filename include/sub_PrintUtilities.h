#ifndef sub_PrintUtilities_h
#define sub_PrintUtilities_h
//
// Common stuff and utilities for print and output
//

// Begin local includes
#include <mem_AllocationOperators.h>
// End local includes

class SMAFsmSystemDofDefinition;
class SMAMtxMultiMatrix;
class SMAMtxSparseMatrix;
class sub_GenericSystem;
template <class T> class SMABasVector;

/// Convert double to string with specified zero cut-off value and precision.
/// Buffer provided by caller and must be long enough to fit the value, at least 8 + precision.
char * sub_DoubleToChar( double value, char *buffer, double zero = 0.0, int precision = 15 );

/// Formats to print loads and operators generated by *MATRIX GENERATE 
// Sparse (regular)
#define FMT_LOAD_HEAD       "** Assembled nodal loads\n"
#define FMT_LOAD_CASE       "*LOAD CASE, NAME=%s\n"
#define FMT_CLOAD_REAL      "*CLOAD, REAL\n"
#define FMT_CLOAD_IMAG      "*CLOAD, IMAGINARY\n"
#define FMT_LOAD_LINE       "%d,%d, %s\n"
#define FMT_LOAD_COORD      "%d %18.15e\n"
#define FMT_END_LOAD_CASE   "*END LOAD CASE\n"
#define FMT_OPER_HEAD       "** Assembled operator %s\n"
#define FMT_OPER_LINE       "%d,%d, %d,%d, %s\n"
#define FMT_OPER_COORD      "%d %d %18.15e\n"
// EBE
#define FMT_LOAD_EBE_HEAD   "** Element-by-element nodal loads\n"
#define FMT_LOAD_EBE_HEAD_IMAG "** Element-by-element nodal loads - imaginary\n"
#define FMT_LOAD_EBE_CASE   "** Load case %i: %s\n"
#define FMT_LOAD_EBE_ID     "** %d\n"
#define FMT_LOAD_EBE_LINE   "%d, %d,%d, %18.15e\n"
#define FMT_LOAD_EBE_LINEC  "%d, %d,%d, %d, %18.15e\n"   // with load case
#define FMT_OPER_EBE_HEAD   "** Element-by-element operator %s\n"
#define FMT_OPER_EBE_LINE   "%d, %d,%d, %d,%d, %18.15e\n"
#define FMT_OPER_EBE_COORD  "%d %d %d %18.15e\n"

/// Utility class (namespace)
class sub_PrintUtilities : public mem_AllocationOperators
{
public:
    // Operator names
    static const char * OperatorName(int id);
};

#endif
